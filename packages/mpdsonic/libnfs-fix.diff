commit 34d6fe37e986da5b0ced86cd028a88e482537d5a
Author: Pavel Borzenkov <pavel@borzenkov.net>
Date:   Tue Nov 1 15:39:35 2022 +0100

    multithreading.c: do not wake up immediately if there are no events to process
    
    0 as timeout makes poll() return as soon as possible, even if there are no
    events to process. This, in turn, results in the service thread consuming the
    whole CPU doing nothing.
    
    Instead, sleep for at least 100ms (or until there is an event) and call
    nfs_server to process any outstanding timeout.

diff --git a/lib/multithreading.c b/lib/multithreading.c
index b0e717e..b6cd40a 100644
--- a/lib/multithreading.c
+++ b/lib/multithreading.c
@@ -81,7 +81,8 @@ static void *nfs_mt_service_thread(void *arg)
 		pfd.events = nfs_which_events(nfs);
 		pfd.revents = 0;
 
-		ret = poll(&pfd, 1, 0);
+		// Wake up at least every 100ms to process timeouts.
+		ret = poll(&pfd, 1, 100);
 		if (ret < 0) {
 			nfs_set_error(nfs, "Poll failed");
 			revents = -1;
